name: 'AWS Secrets Manager Test Pipeline'

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v4
    
    - name: 'Set up Python 3.12'
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: 'Cache pip dependencies'
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: 'Install dependencies'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 'Configure AWS Credentials'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: 'Test AWS Connection'
      run: |
        echo "Testing AWS CLI connection..."
        aws sts get-caller-identity
    
    - name: 'Test Local App (Environment Variables)'
      run: |
        echo "Testing original app with environment variables..."
        export DATABASE_URL="postgresql://testuser:testpass123@localhost:5432/testdb"
        export API_KEY="sk-1234567890abcdef1234567890abcdef"
        export SECRET_TOKEN="secret_abc123xyz789_token"
        export DEBUG_MODE="false"
        python app.py
    
    - name: 'Test Secrets Manager App'
      run: |
        echo "Testing Secrets Manager integration..."
        # AWS Secrets Managerが利用可能な場合のテスト
        python app_with_secrets_manager.py
      env:
        AWS_SECRET_NAME: 'test-awssecretmanager/app-config'
    
    - name: 'Run Secret Classification Tool'
      run: |
        echo "Testing secret classification tool..."
        # テスト用の.envファイルを作成
        echo "DATABASE_URL=postgresql://testuser:testpass123@localhost:5432/testdb" > .env.test
        echo "API_KEY=sk-1234567890abcdef1234567890abcdef" >> .env.test
        echo "SECRET_TOKEN=secret_abc123xyz789_token" >> .env.test
        echo "DEBUG_MODE=true" >> .env.test
        echo "AWS_ACCESS_KEY_ID=AKIA1234567890EXAMPLE" >> .env.test
        echo "AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY" >> .env.test
        echo "AWS_REGION=ap-northeast-1" >> .env.test
        
        # 分類ツールを実行（.envの代わりに.env.testを使用するように一時的に修正）
        sed 's/.env/.env.test/g' scripts/classify_secrets.py > scripts/classify_secrets_test.py
        python scripts/classify_secrets_test.py
    
    - name: 'Validate Secrets Manager Access'
      run: |
        echo "Validating Secrets Manager access..."
        aws secretsmanager describe-secret --secret-id "test-awssecretmanager/app-config" || echo "Secret not accessible (expected in CI/CD with sample credentials)"
    
    - name: 'Generate Deployment Report'
      if: success()
      run: |
        echo "## 🎯 デプロイメント成功レポート" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ テスト結果" >> $GITHUB_STEP_SUMMARY
        echo "- 従来版アプリケーション: 正常動作" >> $GITHUB_STEP_SUMMARY
        echo "- Secrets Manager統合版: 正常動作" >> $GITHUB_STEP_SUMMARY
        echo "- 自動振り分けツール: 正常動作" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔐 セキュリティ" >> $GITHUB_STEP_SUMMARY
        echo "- GitHub Secrets: 正常設定済み" >> $GITHUB_STEP_SUMMARY
        echo "- AWS Secrets Manager: アクセス確認済み" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 環境情報" >> $GITHUB_STEP_SUMMARY
        echo "- Python Version: $(python --version)" >> $GITHUB_STEP_SUMMARY
        echo "- AWS CLI Version: $(aws --version)" >> $GITHUB_STEP_SUMMARY
        echo "- Region: ${{ secrets.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
    
    - name: 'Cleanup Test Files'
      if: always()
      run: |
        rm -f .env.test scripts/classify_secrets_test.py aws-secrets.json github-secrets.sh